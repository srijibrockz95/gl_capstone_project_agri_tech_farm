CREATE OR REPLACE STREAM "AGGREGATE_SQL_STREAM" (
    sprinkler_id VARCHAR(16),
    sensor_id VARCHAR(8),
    sensor_timestamp TIMESTAMP,
    avg_temperature REAL,
    max_temperature REAL,
    min_temperature REAL,
    avg_moisture REAL,
    max_moisture REAL,
    min_moisture REAL,
    sensor_lat REAL,
    sensor_long REAL
);

CREATE OR REPLACE  PUMP "STREAM_AGGREGATE_PUMP" AS INSERT INTO "AGGREGATE_SQL_STREAM"
-- Aggregate function COUNT|AVG|MAX|MIN|SUM|STDDEV_POP|STDDEV_SAMP|VAR_POP|VAR_SAMP)
SELECT STREAM "sprinkler_id", "sensor_id", 
STEP("SOURCE_SQL_STREAM_001".ROWTIME BY INTERVAL '2' MINUTE) as "sensor_timestamp", 
avg("sensor_temperature") as "avg_temperature", max("sensor_temperature") as "max_temperature", 
min("sensor_temperature") as "min_temperature", avg("sensor_moisture") as "avg_moisture", 
max("sensor_moisture") as "max_moisture", min("sensor_moisture") as "min_moisture",
"sensor_lat", "sensor_long"
FROM "SOURCE_SQL_STREAM_001"
-- Uses a 10-second tumbling time window
GROUP BY "sensor_id", "sprinkler_id",  STEP("SOURCE_SQL_STREAM_001".ROWTIME BY INTERVAL '2' MINUTE), "sensor_lat", "sensor_long";

CREATE OR REPLACE STREAM "ANOMALY_SQL_STREAM" (
    sprinkler_id VARCHAR(16),
    sensor_id VARCHAR(8),
    sensor_timestamp TIMESTAMP,
    avg_temperature REAL,
    avg_moisture REAL,
    sensor_lat REAL,
    sensor_long REAL
);
CREATE OR REPLACE  PUMP "STREAM_ANOMALY_PUMP" AS INSERT INTO "ANOMALY_SQL_STREAM"
SELECT STREAM sprinkler_id, sensor_id, sensor_timestamp, avg_temperature, avg_moisture, sensor_lat, sensor_long
FROM AGGREGATE_SQL_STREAM
WHERE avg_temperature >= 20 and avg_moisture <= 60;
